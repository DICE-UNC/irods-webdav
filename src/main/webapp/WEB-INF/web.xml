<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
version="2.4">

	<welcome-file-list>
		<welcome-file>home-debug.html</welcome-file>
	</welcome-file-list>
	
	
	<!--
		 webapp root key: necessary when having multiple instance with log4j
		-->
	 <context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>3.4</param-value>
	</context-param>
	
	<!--
		Location of the Log4J config file, for initialization and refresh checks.
		Applied by Log4jConfigListener.

	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/log4j.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	-->
	 <session-config>
    	<session-timeout>120</session-timeout>
  	</session-config>
	
	

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:**/*Context.xml</param-value>
	</context-param>
	
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
	
	
	<!-- 1. Character Encoding Filter -->
	<filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
	
	<!-- 2. Security Filter Proxy Definition
	<filter>
	  <filter-name>springSecurityFilterChain</filter-name>
	  <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
 
	<filter-mapping>
	  <filter-name>springSecurityFilterChain</filter-name>
	  <url-pattern>/*</url-pattern>
	</filter-mapping>  -->
	
	<filter>
		<filter-name>basicAuthFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>basicAuthFilter</filter-name>
		  <url-pattern>/*</url-pattern>
	</filter-mapping>
	
		<!-- 3. Miltion.io WebDav Filter -->
	 <filter>
        <filter-name>miltonFilter</filter-name>
        <filter-class>io.milton.servlet.SpringMiltonFilter</filter-class>
        <init-param>
            <param-name>milton.exclude.paths</param-name>    
            <param-value>/static,/templates</param-value>
        </init-param>
       <init-param>
            <param-name>contextConfigLocation</param-name>    
            <param-value>classpath:miltonContext.xml</param-value>
        </init-param>
         <init-param>
        <param-name>authenticationHandlers</param-name>
        <param-value>io.milton.http.http11.auth.BasicAuthHandler</param-value>
      </init-param>
    </filter>
    
    <filter-mapping>
        <filter-name>miltonFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
	
	
	<!--
	<servlet>
		<description>Spring MVC Dispatcher Servlet</description>
		<servlet-name>test</servlet-name>
		<servlet-class>io.milton.servlet.DavEnabledDispatcherServlet</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>test</servlet-name>
		<url-pattern>/test/*</url-pattern>
	</servlet-mapping>-->
	
</web-app>